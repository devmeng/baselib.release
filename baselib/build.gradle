plugins {
    id 'org.jetbrains.kotlin.android'
    id "com.android.library"
    id 'maven-publish'
}
//apply from: 'tinker-support.gradle'

android {
    compileSdk 32

    defaultConfig {
        minSdk 26
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

    }

    sourceSets {
        main {
            manifest.srcFile "src/main/AndroidManifest.xml"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding = true
    }
}
//group = 'com.devmeng.baselib'
//version = '1.0.3'

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.devmeng'
                version = '1.0.1'
                artifactId = 'baselib'
                // 必须有这个 否则不会上传AAR包
//                afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            }
        }
    }
}


dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //多种布局资源控件依赖 RecyclerView ToolBar 等
    api 'com.google.android.material:material:latest.release'
    //Lottie 动画框架
    api 'com.airbnb.android:lottie:latest.release'
    //glide图片加载
    api "com.github.bumptech.glide:glide:4.14.1"
    //约束布局
    api 'androidx.constraintlayout:constraintlayout:latest.release'

    //network
    api "com.squareup.okhttp3:okhttp:latest.release"
    api "com.squareup.retrofit2:retrofit:latest.release"
    api "com.squareup.retrofit2:converter-gson:latest.release"
    api "com.squareup.retrofit2:adapter-rxjava2:latest.release"
    //rxjava
    api "io.reactivex.rxjava2:rxjava:latest.release"
    api "io.reactivex.rxjava2:rxandroid:latest.release"
    api "com.squareup.okhttp3:logging-interceptor:latest.release"

    // 多dex配置
    api "com.android.support:multidex:1.0.1"
    //注释掉原有bugly的仓库
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    //api 'com.tencent.bugly:crashreport:latest.release'
    //应用全量升级
    api 'com.tencent.bugly:crashreport_upgrade:latest.release'
    api 'com.tencent.bugly:nativecrashreport:latest.release'
    //应用热更新
    api 'com.tencent.tinker:tinker-android-lib:latest.release'


}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main
def variants = project.android.libraryVariants
variants.all { variant ->
    def javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",//对应插件module声明的Java版本
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]

        final def log = project.logger
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}